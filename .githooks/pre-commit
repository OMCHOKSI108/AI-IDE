#!/bin/bash

# AI-IDE Pre-commit Hook
# Runs linting, formatting, and basic tests before allowing commits

echo "üîç Running pre-commit checks..."

# Change to the repository root
cd "$(git rev-parse --show-toplevel)"

# Check if we have staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)
if [ -z "$STAGED_FILES" ]; then
  echo "No staged files found."
  exit 0
fi

# Check backend files
BACKEND_FILES=$(echo "$STAGED_FILES" | grep "^backend/.*\.js$" || true)
if [ -n "$BACKEND_FILES" ]; then
  echo "üì¶ Checking backend files..."
  
  # Run ESLint on backend
  cd backend
  echo "Running ESLint on backend..."
  npm run lint
  if [ $? -ne 0 ]; then
    echo "‚ùå ESLint failed for backend. Please fix the issues before committing."
    exit 1
  fi
  
  # Run Prettier check on backend
  echo "Checking Prettier formatting on backend..."
  npm run format:check
  if [ $? -ne 0 ]; then
    echo "‚ùå Prettier formatting issues found in backend. Run 'npm run format' to fix."
    exit 1
  fi
  
  cd ..
fi

# Check frontend files
FRONTEND_FILES=$(echo "$STAGED_FILES" | grep "^frontend/.*\.\(js\|jsx\)$" || true)
if [ -n "$FRONTEND_FILES" ]; then
  echo "‚öõÔ∏è Checking frontend files..."
  
  # Run ESLint on frontend
  cd frontend
  echo "Running ESLint on frontend..."
  npm run lint
  if [ $? -ne 0 ]; then
    echo "‚ùå ESLint failed for frontend. Please fix the issues before committing."
    exit 1
  fi
  
  cd ..
fi

echo "‚úÖ All pre-commit checks passed!"
exit 0